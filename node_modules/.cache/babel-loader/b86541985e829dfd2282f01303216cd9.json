{"ast":null,"code":"var _jsxFileName = \"/Users/Faizy/Desktop/threejs_react/src/Three/Scene.js\";\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff00ff\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    camera.position.z = 4;\n    scene.add(cube);\n    renderer.setClearColor('#000000');\n    renderer.setSize(width, height);\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.material = material;\n    this.cube = cube;\n    this.mount.appendChild(this.renderer.domElement);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px'\n      },\n      ref: mount => {\n        this.mount = mount;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(Scene, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Faizy/Desktop/threejs_react/src/Three/Scene.js"],"names":["Scene","React","Component","constructor","props","start","bind","stop","animate","componentDidMount","width","mount","clientWidth","height","clientHeight","scene","THREE","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","position","z","add","setClearColor","setSize","appendChild","domElement","componentWillUnmount","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","rotation","x","y","renderScene","window","render","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["class Scene extends React.Component {\n    constructor(props) {\n      super(props)\n  \n      this.start = this.start.bind(this)\n      this.stop = this.stop.bind(this)\n      this.animate = this.animate.bind(this)\n    }\n  \n    componentDidMount() {\n      const width = this.mount.clientWidth\n      const height = this.mount.clientHeight\n  \n      const scene = new THREE.Scene()\n      const camera = new THREE.PerspectiveCamera(\n        75,\n        width / height,\n        0.1,\n        1000\n      )\n      const renderer = new THREE.WebGLRenderer({ antialias: true })\n      const geometry = new THREE.BoxGeometry(1, 1, 1)\n      const material = new THREE.MeshBasicMaterial({ color: 0xff00ff })\n      const cube = new THREE.Mesh(geometry, material)\n  \n      camera.position.z = 4\n      scene.add(cube)\n      renderer.setClearColor('#000000')\n      renderer.setSize(width, height)\n  \n      this.scene = scene\n      this.camera = camera\n      this.renderer = renderer\n      this.material = material\n      this.cube = cube\n  \n      this.mount.appendChild(this.renderer.domElement)\n      this.start()\n    }\n  \n    componentWillUnmount() {\n      this.stop()\n      this.mount.removeChild(this.renderer.domElement)\n    }\n  \n    start() {\n      if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate)\n      }\n    }\n  \n    stop() {\n      cancelAnimationFrame(this.frameId)\n    }\n  \n    animate() {\n      this.cube.rotation.x += 0.01\n      this.cube.rotation.y += 0.01\n  \n      this.renderScene()\n      this.frameId = window.requestAnimationFrame(this.animate)\n    }\n  \n    renderScene() {\n      this.renderer.render(this.scene, this.camera)\n    }\n  \n    render() {\n      return (\n        <div\n          style={{ width: '400px', height: '400px' }}\n          ref={(mount) => { this.mount = mount }}\n        />\n      )\n    }\n  }\n  \n  ReactDOM.render(<Scene />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}