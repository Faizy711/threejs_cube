{"ast":null,"code":"var _jsxFileName = \"/Users/Faizy/Desktop/threejs_cube/src/App.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene();\n    var camera1 = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var camera2 = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    {\n      const color = 0xFFFFFF;\n      const intensity = 2;\n      const light = new THREE.DirectionalLight(color, intensity);\n      light.position.set(-1, 2, 4);\n      scene.add(light);\n    }\n    var geometry_box = new THREE.BoxGeometry(1, 1, 1);\n    var material_box = new THREE.MeshPhongMaterial({\n      color: 0x44aa88\n    });\n    var cube = new THREE.Mesh(geometry_box, material_box);\n\n    function makeInstance(geometry, color, x) {\n      const material = new THREE.MeshPhongMaterial({\n        color\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      cube.position.x = x;\n      return cube;\n    }\n\n    const cubes = [makeInstance(geometry_box, 0x44aa88, 0), makeInstance(geometry_box, 0x8844aa, -3), makeInstance(geometry_box, 0xaa8844, 3)];\n    var material_line = new THREE.LineBasicMaterial({\n      color: 0x0000ff\n    });\n    var geometry_line = new THREE.Geometry();\n    geometry_line.vertices.push(new THREE.Vector3(-10, 0, 0));\n    geometry_line.vertices.push(new THREE.Vector3(0, 10, 0));\n    geometry_line.vertices.push(new THREE.Vector3(10, 0, 0));\n    var line = new THREE.Line(geometry_line, material_line);\n    scene.add(cube);\n    camera1.position.z = 5;\n    camera2.position.set(0, 0, 100);\n    camera2.lookAt(0, 0, 0);\n\n    var animate = function () {\n      cubes.forEach((cube, ndx) => {\n        const speed = 1 + ndx * .1;\n        const rot = 0.001 * speed;\n        cube.rotation.x = rot;\n        cube.rotation.y = rot;\n      });\n      line.rotation.x += 0.001;\n      line.rotation.y += 0.001;\n      renderer.render(scene, camera1);\n      requestAnimationFrame(animate);\n    };\n\n    requestAnimationFrame(animate);\n    animate(); // === THREE.JS EXAMPLE CODE END ===\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: ref => this.mount = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}), rootElement);\nexport default App;","map":{"version":3,"sources":["/Users/Faizy/Desktop/threejs_cube/src/App.js"],"names":["React","Component","ReactDOM","THREE","App","componentDidMount","scene","Scene","camera1","PerspectiveCamera","window","innerWidth","innerHeight","camera2","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","color","intensity","light","DirectionalLight","position","set","add","geometry_box","BoxGeometry","material_box","MeshPhongMaterial","cube","Mesh","makeInstance","geometry","x","material","cubes","material_line","LineBasicMaterial","geometry_line","Geometry","vertices","push","Vector3","line","Line","z","lookAt","animate","forEach","ndx","speed","rot","rotation","y","render","requestAnimationFrame","ref","mount","rootElement","getElementById"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene();\n\n    var camera1 = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var camera2 = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    {\n    const color = 0xFFFFFF;\n    const intensity = 2;\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(-1, 2, 4);\n    scene.add(light);\n    }\n\n    var geometry_box = new THREE.BoxGeometry(1, 1, 1);\n    var material_box = new THREE.MeshPhongMaterial({color: 0x44aa88});\n    var cube = new THREE.Mesh(geometry_box, material_box);\n\n    function makeInstance(geometry, color, x) {\n      const material = new THREE.MeshPhongMaterial({color});\n  \n      const cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n  \n      cube.position.x = x;\n  \n      return cube;\n    }\n\n    const cubes = [\n      makeInstance(geometry_box, 0x44aa88,  0),\n      makeInstance(geometry_box, 0x8844aa, -3),\n      makeInstance(geometry_box, 0xaa8844,  3),\n    ];\n\n    var material_line = new THREE.LineBasicMaterial({ color: 0x0000ff });\n    var geometry_line = new THREE.Geometry();\n    geometry_line.vertices.push(new THREE.Vector3(-10, 0, 0));\n    geometry_line.vertices.push(new THREE.Vector3(0, 10, 0));\n    geometry_line.vertices.push(new THREE.Vector3(10, 0, 0));\n    var line = new THREE.Line(geometry_line, material_line);\n\n    scene.add(cube);\n\n    camera1.position.z = 5;\n    camera2.position.set(0, 0, 100);\n    camera2.lookAt(0, 0, 0);\n\n    var animate = function () {\n      \n      \n      cubes.forEach((cube, ndx) => {\n        const speed = 1 + ndx * .1;\n        const rot = 0.001 * speed;\n        cube.rotation.x = rot;\n        cube.rotation.y = rot;\n      });\n\n      line.rotation.x += 0.001;\n      line.rotation.y += 0.001;\n      renderer.render(scene, camera1);\n      requestAnimationFrame(animate);\n    };\n    requestAnimationFrame(animate);\n    animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n  render() {\n    return (\n      <div ref={ref => (this.mount = ref)} />\n    )\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}